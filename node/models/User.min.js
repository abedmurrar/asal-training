var database=require("../dbconnection"),crypto=require("crypto"),HttpStatus=require("http-status-codes"),debug=require("debug")("user-model");const usernameRegex=/^[a-z](([\w][\.\-]{0,1}){6,22})[a-z]$/,emailRegex=/^[\w]([\w][\.\-]{0,1}?)+\@([a-z0-9][_\.\-]{0,1}?)+\.([a-z]{2,5})$/,passwordRegex=/^.{7,}$/,tables={users:"users",roles:"user_role"};var User={getAllUsers:(e,s)=>database(tables.users).join(tables.roles,function(){this.on("u_role","=","role_id")}).select("id","username","password","email","role").then(e).catch(s),getUserById:(e,s,t)=>database(tables.users).select("id","username","password","email","role").join(tables.roles,function(){this.on("u_role","=","role_id")}).where("id",e).first().then(s).catch(t),getUserByUsername:(e,s,t)=>{if(e.length)return database(tables.users).join(tables.roles,function(){this.on("u_role","=","role_id")}).select("*").where("username",e).first().then(s).catch(t);t({msg:"Empty request"})},addUser:(e,s,t)=>{var a={},r=!0;try{let l=e.username.trim().toLowerCase(),o=e.email.trim().toLowerCase(),i=e.password;if(""!=l&&usernameRegex.test(l)||(r=!1,a.username="Username is not valid"),""!=o&&emailRegex.test(o)||(r=!1,a.email="Email is not valid"),passwordRegex.test(i)||(r=!1,a.password="Password must be at least 7 characters"),r){let e=crypto.createHash("sha256").update(i).digest("hex");return database(tables.users).insert({username:l,password:e,email:o}).then(s).catch(t)}t(a)}catch(e){return t()}},deleteUser:(e,s,t)=>database(tables.users).del().where("id",e).then(s).catch(t),updateUser:(e,s,t,a)=>{try{var r={},l={};if(s.username){let e=s.username.trim().toLowerCase();e.length&&usernameRegex.test(e)?l.username=e:r.username="Username is not valid"}if(s.email){let e=s.email.trim().toLowerCase();e.length&&emailRegex.test(e)?l.email=e:r.email="Email is not valid"}if(s.password){let e=s.password;e.length&&passwordRegex.test(e)?(e=crypto.createHash("sha256").update(e).digest("hex"),l.password=e):r.password="Password must be at least 7 characters"}if(Object.keys(l).length>0)return database(tables.users).update(l).where("id",e).then(t).catch(a);a(r)}catch(e){a({code:HttpStatus.INTERNAL_SERVER_ERROR,message:"Invalid data format!"})}}};module.exports=User;